# -------------------------------
# PROBE OUT Macro
# -------------------------------
[gcode_macro PROBE_OUT]
description: Move the probe out to the specified position
gcode:
  G90                      ; Set to absolute positioning
  G1 X245 F4000             ; Move the probe to X245 at feedrate 4000
  G4 P300                   ; Wait for 300ms
  G1 Z15                    ; Move Z-axis to 15mm
  G1 X0                     ; Move X-axis back to 0

# -------------------------------
# PROBE IN Macro
# -------------------------------
[gcode_macro PROBE_IN]
description: Move the probe in to the starting position
gcode:
  G90                      ; Set to absolute positioning
  G1 Z20                    ; Move Z to 20mm
  G1 X245 F12000            ; Move X-axis to 245mm at feedrate 12000
  G1 Y0                     ; Move Y-axis to 0mm (check against stepper_y position_min)
  G1 Z0                     ; Move Z-axis down to 0
  G4 P300                   ; Wait for 300ms
  G1 X220 F6000             ; Move X-axis to 220mm at feedrate 6000
  G1 Z10                    ; Move Z to 10mm
  G1 X0                     ; Move X-axis back to 0

# -------------------------------
# Pause Macro
# -------------------------------
[gcode_macro PAUSE]
description: Pause the actual running print and park the head
rename_existing: PAUSE_BASE
variable_extrude: 1.0
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}             ; Get the extrusion amount
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}        ; Set X parking position (max X - 5)
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}        ; Set Y parking position (max Y - 5)
  {% set max_z = printer.toolhead.axis_maximum.z|float %}               ; Get max Z height
  {% set act_z = printer.toolhead.position.z|float %}                   ; Get current Z height
  {% if act_z < (max_z - 2.0) %}                                        ; Check if the current Z height is below max - 2
      {% set z_safe = 2.0 %}                                             ; Safe Z position for parking
  {% else %}
      {% set z_safe = max_z - act_z %}                                  ; Calculate the safe Z position based on the current height
  {% endif %}

  PAUSE_BASE                 ; Call the existing pause macro
  G91                        ; Switch to relative positioning
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100           ; Retract the extruder by E amount at feedrate 2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}  ; If extruder is not ready, display a message
  {% endif %}

  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900         ; Move Z to the safe position
    G90                        ; Switch back to absolute positioning
    G1 X{x_park} Y{y_park} F6000 ; Move X and Y to the park positions
  {% else %}
    {action_respond_info("Printer not homed")}  ; If printer is not homed, display a message
  {% endif %}

# -------------------------------
# Resume Macro
# -------------------------------
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}             ; Get the extrusion amount from the pause
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY) %}              ; Get the velocity parameter if specified
  {% else %}
    {% set get_params = "" %}                                           ; Set default empty parameters if no velocity is provided
  {% endif %}

  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91                        ; Switch to relative positioning
    G1 E{E} F2100              ; Extrude the required amount at feedrate 2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}  ; If extruder is not ready, display a message
  {% endif %}

  RESUME_BASE {get_params}     ; Call the existing resume macro with velocity if defined

# -------------------------------
# Cancel Print Macro
# -------------------------------
[gcode_macro CANCEL_PRINT]
description: Cancel the current print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS            ; Turn off all heaters
  CANCEL_PRINT_BASE           ; Call the existing cancel print macro

# -------------------------------
# Preheat and Cool Load Macros
# -------------------------------
[gcode_macro PREHEAT_LOAD]
description: Preheat the printer to 240°C for filament loading
gcode:
  M104 S240                   ; Set extruder to 240°C

[gcode_macro COOL_LOAD]
description: Cool down the printer to 0°C after filament loading
gcode:
  M104 S0                     ; Set extruder to 0°C

# -------------------------------
# Filament Loading Macros
# -------------------------------
[gcode_macro LOAD_FILAMENT]
description: Load filament with extrusion
gcode:
  M117 Loading Filament...    ; Display loading message
  M83                        ; Set extruder to relative mode
  G1 E60 F1000               ; Extrude 60mm of filament at feedrate 1000
  G1 E100 F250               ; Extrude 100mm of filament at slower feedrate
  G92 E0.0                   ; Reset the extruder position to 0
  M400                       ; Wait for all moves to finish
  M117 Load Complete         ; Display completion message

[gcode_macro LOAD_FILAMENT_SLOW]
description: Load filament slowly to avoid extruder issues
gcode:
  M117 Loading Filament...    ; Display loading message
  M83                        ; Set extruder to relative mode
  G1 E50 F250                ; Extrude 50mm at feedrate 250
  G1 E50 F250                ; Extrude another 50mm at feedrate 250
  G1 E30 F100                ; Extrude 30mm at slower feedrate
  G1 E30 F100                ; Extrude another 30mm at slower feedrate
  G92 E0.0                   ; Reset the extruder position to 0
  M400                       ; Wait for all moves to finish
  M117 Load Complete         ; Display completion message

[gcode_macro UNLOAD_FILAMENT]
description: Unload filament
gcode:
  M117 Unloading Filament...  ; Display unloading message
  M83                        ; Set extruder to relative mode
  G1 E0.5 F1000              ; Retract 0.5mm of filament
  G1 E-0.5 F1000             ; Unload 0.5mm of filament
  G1 E1.0 F1000              ; Load 1mm of filament
  G1 E-1.0 F1000             ; Unload 1mm of filament
  G1 E1.5 F1000              ; Load 1.5mm of filament
  G1 E-1.5 F1000             ; Unload 1.5mm of filament
  G1 E2.0 F1000              ; Load 2mm of filament
  G1 E-120 F1000             ; Unload 120mm of filament to fully clear the extruder
  M117 Remove Filament Now!  ; Display message to remove filament
  M400                       ; Wait for all moves to finish

[gcode_macro PURGE]
description: Purge filament to clear the extruder
gcode:
  M83                        ; Set extruder to relative mode
  G1 E50.0 F250              ; Extrude 50mm of filament at feedrate 250
  G90                        ; Switch to absolute positioning
  M400                       ; Wait for all moves to finish

# -------------------------------
# Filament Runout Detection Macros
# -------------------------------
[gcode_macro RUNOUT_ON]
description: Enable filament runout detection
gcode:
  SET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1

[gcode_macro RUNOUT_OFF]
description: Disable filament runout detection
gcode:
  SET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0

# -------------------------------
# Loading Position and Heating Macros
# -------------------------------
[gcode_macro HEAT_AND_MOVE_TO_LOAD]
description: Preheat the printer and move to the loading position
gcode:
  M104 S240                   ; Preheat extruder to 240°C
  {% if printer.homed_axes != 'XYZ' %}
      G28                      ; Home all axes if not already homed
  {% endif %}
  G1 X115 Y115 F10000         ; Move to filament loading position (X115 Y115)
  G1 Z40 F60000               ; Move Z to 40mm at a very fast rate
  M109 S240                   ; Wait for extruder to reach 240°C
  SET_PIN PIN=beeper VALUE=1   ; Activate beeper
  G4 P200                     ; Wait for 200ms
  SET_PIN PIN=beeper VALUE=0   ; Deactivate beeper

# -------------------------------
# Bed Mesh Calibration Macros
# -------------------------------
[gcode_macro G29]
description: Load the bed mesh profile
gcode:
  BED_MESH_PROFILE LOAD=thesus  ; Load the bed mesh profile 'thesus'

[gcode_macro COMMIT_BED_MESH]
description: Calibrate the bed mesh and save the profile
gcode:
  M140 S70                     ; Set bed temperature to 70°C
  {% if printer.homed_axes != 'XYZ' %}
      G28                        ; Home all axes if not already homed
  {% endif %}
  M190 S70                     ; Wait for bed to reach 70°C
  G4 S60                       ; Wait for 60 seconds
  BED_MESH_CALIBRATE           ; Perform bed mesh calibration
  BED_MESH_PROFILE SAVE=thesus  ; Save the bed mesh profile as 'thesus'
  SAVE_CONFIG                  ; Save the configuration